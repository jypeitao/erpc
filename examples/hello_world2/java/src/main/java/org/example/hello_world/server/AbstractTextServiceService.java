/** 
 * Generated by erpcgen 1.13.0 on Fri Feb 14 13:57:33 2025.
 * 
 * AUTOGENERATED - DO NOT EDIT
 */
package org.example.hello_world.server;

import org.example.hello_world.interfaces.ITextService;



import io.github.embeddedrpc.erpc.auxiliary.MessageInfo;
import io.github.embeddedrpc.erpc.auxiliary.MessageType;
import io.github.embeddedrpc.erpc.codec.Codec;
import io.github.embeddedrpc.erpc.server.Service;
import io.github.embeddedrpc.erpc.auxiliary.Reference;


import java.util.ArrayList;
import java.util.List;

/**
 * Testing abstract service class for simple eRPC interface.
 */
public abstract class AbstractTextServiceService
        extends Service
        implements ITextService {

    /**
     * Default constructor.
     */
    public AbstractTextServiceService() {
        super(ITextService.SERVICE_ID);
        addMethodHandler(ITextService.PRINTTEXT_ID, this::printTextHandler);
        addMethodHandler(ITextService.STOPSERVER_ID, this::stopServerHandler);
    }

    private void printTextHandler(int sequence, Codec codec) {
        String text;

        text = codec.readString();

        boolean _result = printText(text);

        codec.reset();

        codec.startWriteMessage(new MessageInfo(
                MessageType.kReplyMessage,
                getServiceId(),
                ITextService.PRINTTEXT_ID,
                sequence)
        );

        // Read out parameters
        // Read return value
        codec.writeBool(_result);
    }
    private void stopServerHandler(int sequence, Codec codec) {


        stopServer();

        codec.reset();

    }

}

