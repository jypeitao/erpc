#
# Generated by erpcgen 1.13.0 on Fri Feb 14 13:57:33 2025.
#
# AUTOGENERATED - DO NOT EDIT
#

import erpc
from . import common, interface

# Client for TextService
class TextServiceService(erpc.server.Service):
    def __init__(self, handler):
        super(TextServiceService, self).__init__(interface.ITextService.SERVICE_ID)
        self._handler = handler
        self._methods = {
                interface.ITextService.PRINTTEXT_ID: self._handle_printText,
                interface.ITextService.STOPSERVER_ID: self._handle_stopServer,
            }

    def _handle_printText(self, sequence, codec):
        # Read incoming parameters.
        text = codec.read_string()

        # Invoke user implementation of remote function.
        _result = self._handler.printText(text)

        # Prepare codec for reply message.
        codec.reset()

        # Construct reply message.
        codec.start_write_message(erpc.codec.MessageInfo(
            type=erpc.codec.MessageType.kReplyMessage,
            service=interface.ITextService.SERVICE_ID,
            request=interface.ITextService.PRINTTEXT_ID,
            sequence=sequence))
        codec.write_bool(_result)

    def _handle_stopServer(self, sequence, codec):
        # Read incoming parameters.

        # Invoke user implementation of remote function.
        self._handler.stopServer()


