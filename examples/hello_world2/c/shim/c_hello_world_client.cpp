/*
 * Generated by erpcgen 1.13.0 on Fri Feb 14 14:15:26 2025.
 *
 * AUTOGENERATED - DO NOT EDIT
 */


#include "c_hello_world_client.h"
#include "hello_world_client.hpp"
#include "erpc_manually_constructed.hpp"

using namespace erpc;
using namespace std;
using namespace erpcShim;


#if ERPC_ALLOCATION_POLICY == ERPC_ALLOCATION_POLICY_DYNAMIC
TextService_client *s_TextService_client = nullptr;
#else
ERPC_MANUALLY_CONSTRUCTED_STATIC(TextService_client, s_TextService_client);
#endif

bool printText(const char * text)
{
    bool result;
    result = s_TextService_client->printText(text);

    return result;
}

void stopServer(void)
{
    s_TextService_client->stopServer();
}

void initTextService_client(erpc_client_t client)
{
#if ERPC_ALLOCATION_POLICY == ERPC_ALLOCATION_POLICY_DYNAMIC
    erpc_assert(s_TextService_client == nullptr);
    s_TextService_client = new TextService_client(reinterpret_cast<ClientManager *>(client));
#else
    erpc_assert(!s_TextService_client.isUsed());
    s_TextService_client.construct(reinterpret_cast<ClientManager *>(client));
#endif
}

void deinitTextService_client(void)
{
#if ERPC_ALLOCATION_POLICY == ERPC_ALLOCATION_POLICY_DYNAMIC
    if (s_TextService_client != nullptr)
    {
        delete s_TextService_client;
        s_TextService_client = nullptr;
    }
#else
    s_TextService_client.destroy();
#endif
}
